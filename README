
 Renesas Open Source Project (ROSP)

-----------------------

1) Download full AOSP source code follwing the steps in:

 http://source.android.com/source/downloading.html

I used version "2.3.6_r1" for my first "repo init" step. E.g.

 repo init -u https://android.googlesource.com/platform/manifest -b android-2.3.6_r1

It's useful to define an environment variable, to refer to the AOSP entry dir. 
E.g. I downloaded the AOSP source under my local home, in Android/aosp. Then:

 export AOSP=~/Android/aosp

-----------------------

2) The following customized projects make up our ROSP:

Project                              Path                  
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ffxx68/Renesas-device_emev           device/renesas/emev
ffxx68/Renesas-hardware_libhardware  hardware/libhardware
ffxx68/Renesas-bionic                bionic
ffxx68/Renesas-frameworks_base       frameworks/base
ffxx68/Renesas-build                 build

-----------------------

3) Notes about projects

I meant "ffxx68/Renesas-device_emev" to be the "entry point" to ROSP, with the present README explaining the basic steps to build the firmware update package from scratch.

As "device/renesas/emev" doesn't exist in android GitHub, I created it from scratch and pushed on the ffxx68 GitHub account.

All the rest were forked from the corresponding android/platform_... the Gingerbread branch. 

The procedure I followed, for each project was:

 - In GitHub, fork android/platform_<abc>, Gingerbread branch, to ffxx68
 - In GitHub, admin-rename ffxx68/platform_<abc> to ffxx68/Renesas-<abc>
 - cd <abc-path>
 - git branch MyPad
 - git checkout MyPad
 - Applied here whatever customization is needed for the Renesas EMEV
 - git remote add github git@github.com:ffxx68/Renesas-<abc>.git
 - git push -u github MyPad

If any other project requires customization, apart from the above ones, I can create another project on ffxx68 in the same way.

-----------------------

4) How to pull customized code locally

As "device/renesas/emev" doesn't exist in AOSP, we have to clone it from our (ffxx68) GitHub:

git clone git@github.com:Renesas-device_emev.git device/renesas/emev

The others would be pulled locally from our GitHub projects, i.e.

cd $AOSP/<Path>
git branch MyCustomPad
git checkout MyCustomPad
git remote add github git@github.com:<Project>.git
git fetch github
git merge github/MyPad

This way, "git fetch & merge" would merge our GithHub code with latest AOSP version too

-----------------------

5) How to push changes back to GitHub.

If you change anything, to push it back onto our GitHub repository you would do:

git add <whatever file you changed>
git commit -m "Leave your commit comments here"
git push -u github MyPad

This woud require you to have an account registered on GitHub, where you may have forked the project to.
Find help oh GitHub, for admin and access details. E.g.

 http://help.github.com/send-pull-requests/

If you find it easier, use our ROSP discussion group to let us have your patches instead:

 https://groups.google.com/forum/#!forum/renesas-emev-osp
 
Use the same group if you think anything in this process may be improved. Suggestions are welcome!

-----------------------

6) Building Android

Once you have your code, you would build Android with:

 cd $AOSP
 . build/envsetup.sh

including device/htc/passion/vendorsetup.sh
including device/renesas/emev/vendorsetup.sh
including device/samsung/crespo4g/vendorsetup.sh
including device/samsung/crespo/vendorsetup.sh

 lunch full_renesas_emev-eng

PLATFORM_VERSION_CODENAME=REL
PLATFORM_VERSION=2.3.6
TARGET_PRODUCT=full_renesas_emev
TARGET_BUILD_VARIANT=eng
TARGET_SIMULATOR=false
TARGET_BUILD_TYPE=release
TARGET_BUILD_APPS=
TARGET_ARCH=arm
HOST_ARCH=x86
HOST_OS=linux
HOST_BUILD_TYPE=release
BUILD_ID=GRK39F

 time make -j2 showcommands 2>&1 | tee make.log
...

Installed file list: out/target/product/emev/installed-files.txt




